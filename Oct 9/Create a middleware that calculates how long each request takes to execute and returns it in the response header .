from fastapi import FastAPI, Request
import time, asyncio

app = FastAPI()

# Middleware to measure execution time
@app.middleware("http")
async def add_process_time_header(request: Request, call_next):
    start_time = time.time()
    response = await call_next(request)
    process_time = time.time() - start_time
    response.headers["X-Process-Time"] = str(round(process_time, 3)) + "s"
    return response

# Route with artificial delay
@app.get("/wait/{seconds}")
async def wait_for(seconds: int):
    await asyncio.sleep(seconds)
    return {"message": f"Slept for {seconds} seconds"}
